{"version":3,"sources":["components/EmpTable.jsx","utils/api.js","components/SearchBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["descendingComparator","a","b","orderBy","first","country","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EmpTable","React","useState","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emps","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","aria-label","rowCount","TableBody","slice","emp","hover","tabIndex","src","picture","thumbnail","alt","name","last","email","phone","location","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","FormControlLabel","control","Switch","checked","onChange","axios","get","then","res","result","data","results","catch","err","console","log","getUsers","SearchBar","setSearch","TextField","e","App","setFirst","setEmps","search","filteredEmps","filterEmps","useEffect","employees","fetchData","filter","toLowerCase","includes","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d40e627.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (a[orderBy].first) {\r\n    if (b[orderBy].first < a[orderBy].first) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy].first > a[orderBy].first) {\r\n      return 1;\r\n    }\r\n  } else if (a[orderBy].country) {\r\n    if (b[orderBy].country < a[orderBy].country) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy].country > a[orderBy].country) {\r\n      return 1;\r\n    }\r\n  } else {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"thumb\", numeric: false, disablePadding: true, label: \"Picture\" },\r\n  { id: \"name\", numeric: true, disablePadding: false, label: \"Name\" },\r\n  { id: \"email\", numeric: true, disablePadding: false, label: \"Email\" },\r\n  { id: \"phone\", numeric: true, disablePadding: false, label: \"Phone Number\" },\r\n  {\r\n    id: \"location\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Location\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {headCell.id === \"thumb\" ? (\r\n              <TableCell> Picture</TableCell>\r\n            ) : (\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === \"desc\"\r\n                      ? \"sorted descending\"\r\n                      : \"sorted ascending\"}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <Toolbar className={clsx(classes.root)}>\r\n      <Typography\r\n        className={classes.title}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        Employees\r\n      </Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EmpTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"name\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { emps } = props;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, emps.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={emps.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(emps, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((emp, index) => {\r\n                  return (\r\n                    <TableRow hover tabIndex={-1} key={emp.name.first}>\r\n                      <TableCell>\r\n                        <img src={emp.picture.thumbnail} alt=\"some jerk\" />\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {emp.name.first + \" \"}\r\n                        {emp.name.last}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{emp.email}</TableCell>\r\n                      <TableCell align=\"right\">{emp.phone}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {emp.location.country}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={emps.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nasync function getUsers() {\r\n  let result;\r\n  await axios\r\n    .get(\"https://randomuser.me/api/?results=10\")\r\n    .then((res) => {\r\n      result = res.data.results;\r\n    })\r\n    .catch((err) => console.log(err));\r\n\r\n  return result;\r\n}\r\n\r\nexport default getUsers;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nfunction SearchBar(props) {\r\n  const { setSearch } = props;\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n  return <TextField id=\"search\" label=\"search\" onChange={handleChange} />;\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport EmpTable from \"./components/EmpTable\";\nimport Container from \"@material-ui/core/Container\";\nimport getUsers from \"./utils/api\";\nimport SearchBar from \"./components/SearchBar\";\n\nfunction App() {\n  const [first, setFirst] = useState(true);\n  const [emps, setEmps] = useState([]);\n  const [search, setSearch] = useState();\n  const [filteredEmps, filterEmps] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const employees = await getUsers();\n      setEmps(employees);\n      filterEmps(employees);\n    }\n    console.log(first);\n    if (first) {\n      setFirst(false);\n      fetchData();\n    } else {\n      filterEmps(\n        emps.filter((emp) => emp.name.first.toLowerCase().includes(search))\n      );\n    }\n  }, [search]);\n\n  return (\n    <div>\n      <Container>\n        <SearchBar search={search} setSearch={setSearch} />\n        <EmpTable emps={filteredEmps} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}